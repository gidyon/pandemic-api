syntax = "proto3";

package covitrace;

option go_package="location";

import "google/protobuf/empty.proto";
import "google/longrunning/operations.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Represents a geographic location
message Location {
    float longitude = 1;
    float latitude = 2;
    int64 timestamp = 3;
    float accuracy = 4;
    float altitude = 5;
    float speed = 6;
    float speed_accuracy = 7;
    string placemark = 8;
    string geo_fence_id = 9;
    string time_id = 11;
}

// SendLocationRequest is request to send a single location
message SendLocationRequest {
    string user_id = 1;
    Status status_id = 2;
    Location location = 3;
}

// SendLocationsRequest is request to send a collection of location
message SendLocationsRequest {
    string user_id = 1;
    Status status_id = 2;
    repeated Location locations = 3;
}

// Status is user status
enum Status {
    UNKNOWN = 0;
    POSITIVE = 1;
    NEGATIVE = 2;
    SUSPECTED = 3;
    RECOVERED = 4;
}

// UpdateUserStatusRequest is request to update user status
message UpdateUserStatusRequest {
    string phone_number = 1;
    Status status = 2;
}

// UpdateUserRequest is request to update user account
message UpdateUserRequest {
    string phone_number = 1;
    User user = 2;
}

// AddUserRequest is request to add a user
message AddUserRequest {
    User user = 1;
}

// User is an app user
message User {
    string phone_number = 1;
    string full_name = 2;
    string county = 3;
    Status status = 4;
    string device_token = 5;
    bool traced = 6; 
    int64 updated_timestamp = 7;  
}

// GetUserRequest is request to retrieve a single user
message GetUserRequest {
    string phone_number = 1;
}

// ListUsersRequest is request to get collection of users from database
message ListUsersRequest {
    int32 page_size = 1;
    int32 page_token = 2;
    Status filter_status = 3;
}

// ListUsersResponse is response after fetching users
message ListUsersResponse {
    repeated User users = 1;
    int32 next_page_token = 2;
}

// Manages user locations and activities
service LocationTracingAPI {
    // Send a single location to the server
    rpc SendLocation (SendLocationRequest) returns (google.protobuf.Empty) {
        // Maps to HTTP POST
        // Everything maps to the body of the request
        option (google.api.http) = {
            post: "/api/v1/locations/send"
            body: "*"
        };
    };

    // Sends user locations
    rpc SendLocations (SendLocationsRequest) returns (google.protobuf.Empty) {
        // Maps to HTTP POST
        // Everything maps to the body of the request
        option (google.api.http) = {
            post: "/api/v1/locations/send/bulk"
            body: "*"
        };
    };

    // Updates user status
    rpc UpdateUserStatus (UpdateUserStatusRequest) returns (google.protobuf.Empty) {
        // Maps to HTTP PATCH
        // Everything maps to the body of the request
        option (google.api.http) = {
            patch: "/api/v1/users/{phone_number}/status"
            body: "*"
        };
    };

    // Updates user status
    rpc UpdateUser (UpdateUserRequest) returns (google.protobuf.Empty) {
        // Maps to HTTP PATCH
        // Everything maps to the body of the request
        option (google.api.http) = {
            patch: "/api/v1/users/{phone_number}"
            body: "*"
        };
    };

    // Add a new user
    rpc AddUser (AddUserRequest) returns (google.protobuf.Empty) {
        // Maps to HTTP POST
        // Everything maps to the body of the request
        option (google.api.http) = {
            post: "/api/v1/users/action/add"
            body: "*"
        };
    };

    // Retrieves a single user
    rpc GetUser (GetUserRequest) returns (User) {
        // Maps to HTTP GET
        // phone_number is passed as url path parameter
        option (google.api.http) = {
            get: "/api/v1/users/{phone_number}"
        };
    };

    // Retrieves a collection of users
    rpc ListUsers (ListUsersRequest) returns (ListUsersResponse) {
        // Maps to HTTP GET
        // phone_number is passed as url path parameter
        option (google.api.http) = {
            get: "/api/v1/users/action/list"
        };
    };
}