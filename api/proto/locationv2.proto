syntax = "proto3";

option go_package="location";

import "google/protobuf/empty.proto";

// Represents a geographic location
message Location {
    float longitude = 1;
    float latitude = 2;
    int64 timestamp = 3;
    float accuracy = 4;
    float altitude = 5;
    float speed = 6;
    float speed_accuracy = 7;
    string geo_fence_id = 8;
    string placemark = 9;
}

// GetActionsRequest is request to get kind of action to be performed by client
message GetActionsRequest {
    string user_id = 1;
}

// GetUpdatesRequest is request to get recent updates
message GetUpdatesRequest {
    string user_id = 1;
    int64 start_index = 2;
    int64 count = 3;
    int64 start_timestamp_sec = 4;
}

// TimeFilter if filter for time queries
message TimeFilter {
    int64 start_timestamp_sec = 1;
    int64 end_timestamp_sec = 2;
}

message GetUpdatesPayload {
    int64 count = 1;
    int64 start_index = 2;
    int64 start_timestamp_sec = 3;
}
// GetActionsResponse is response containing the action to be performed
message GetActionsResponse {
    oneof action {
        TimeFilter send_locations = 1;
        TimeFilter both = 2;
        GetUpdatesPayload get_updates = 3;
    }
}

// LocationCase is a pandemic case for a location
message LocationCase {
    string user_id = 1;
    string status_id = 2;
    int64 start_timestamp = 3;
    int64 end_timestamp = 4;
    Location location = 5;
}

// LocationCases is collection of location cases
message LocationCases {
    repeated LocationCase cases = 2;
}

// SendLocationsRequest is request containing list of locations sent by user
message SendLocationsRequest {
    string user_id = 1;
    repeated Location locations = 2;
}

// UpdateUserStatusRequest is request to update user status
message UpdateUserStatusRequest {
    string user_id = 1;
    string status = 2;
}

// AddUserRequest is request to add user
message AddUserRequest {
    string phone_number = 1;
    string status_id = 2;
}

// Manages user locations and activities
service LocationTracingAPI {
    // Fetches list of actions to be performed by user
    rpc GetActions (GetActionsRequest) returns (GetActionsResponse);
    // Get cases for a location
    rpc GetLocationCases (Location) returns (LocationCases);
    // Get updates for a user
    rpc GetUpdates (GetUpdatesRequest) returns (LocationCases);
    // Add one case for a locations
    rpc AddLocationCase (LocationCase) returns (google.protobuf.Empty);
    // Add many cases for a location
    rpc AddLocationCases (LocationCases) returns (google.protobuf.Empty);
    // Sends user locations
    rpc SendLocations (SendLocationsRequest) returns (google.protobuf.Empty);
    // Updates user status
    rpc UpdateUserStatus (UpdateUserStatusRequest) returns (google.protobuf.Empty);
    // Add a new user
    rpc AddUser (AddUserRequest) returns (google.protobuf.Empty);
}