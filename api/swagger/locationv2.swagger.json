{
  "swagger": "2.0",
  "info": {
    "title": "locationv2.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/locations/send": {
      "post": {
        "summary": "Send a single location to the server",
        "operationId": "SendLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/covitraceSendLocationRequest"
            }
          }
        ],
        "tags": [
          "LocationTracingAPI"
        ]
      }
    },
    "/api/v1/locations/send/bulk": {
      "post": {
        "summary": "Sends user locations",
        "operationId": "SendLocations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/covitraceSendLocationsRequest"
            }
          }
        ],
        "tags": [
          "LocationTracingAPI"
        ]
      }
    },
    "/api/v1/messaging/alert": {
      "post": {
        "summary": "Send a single location to the server",
        "operationId": "AlertContacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/covitraceContactData"
            }
          }
        ],
        "tags": [
          "Messaging"
        ]
      }
    },
    "/api/v1/messaging/broadcast": {
      "post": {
        "summary": "Sends user locations",
        "operationId": "BroadCastMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/covitraceBroadCastMessageResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/covitraceBroadCastMessageRequest"
            }
          }
        ],
        "tags": [
          "Messaging"
        ]
      }
    },
    "/api/v1/messaging/messages/{phone_number}": {
      "get": {
        "summary": "Add a new user",
        "operationId": "GetMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/covitraceMessages"
            }
          }
        },
        "parameters": [
          {
            "name": "phone_number",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Messaging"
        ]
      }
    },
    "/api/v1/messaging/send": {
      "post": {
        "summary": "Updates user status",
        "operationId": "SendMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/covitraceSendMessageResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/covitraceMessage"
            }
          }
        ],
        "tags": [
          "Messaging"
        ]
      }
    },
    "/api/v1/trace/operations": {
      "get": {
        "summary": "Updates user status",
        "operationId": "ListOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/covitraceListOperationsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "county",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ContactTracing"
        ]
      }
    },
    "/api/v1/trace/users": {
      "post": {
        "summary": "Sends user locations",
        "operationId": "TraceUsersLocations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/covitraceContactTracingResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/covitraceTraceUsersLocationsRequest"
            }
          }
        ],
        "tags": [
          "ContactTracing"
        ]
      }
    },
    "/api/v1/trace/users/{phone_number}": {
      "post": {
        "summary": "Send a single location to the server",
        "operationId": "TraceUserLocations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/covitraceContactTracingResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "phone_number",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/covitraceTraceUserLocationsRequest"
            }
          }
        ],
        "tags": [
          "ContactTracing"
        ]
      }
    },
    "/api/v1/users/action/add": {
      "post": {
        "summary": "Add a new user",
        "operationId": "AddUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/covitraceAddUserRequest"
            }
          }
        ],
        "tags": [
          "LocationTracingAPI"
        ]
      }
    },
    "/api/v1/users/action/list": {
      "get": {
        "summary": "Retrieves a collection of users",
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/covitraceListUsersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter_status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "POSITIVE",
              "NEGATIVE",
              "RECOVERED"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "LocationTracingAPI"
        ]
      }
    },
    "/api/v1/users/{phone_number}": {
      "get": {
        "summary": "Retrieves a single user",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/covitraceUser"
            }
          }
        },
        "parameters": [
          {
            "name": "phone_number",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "LocationTracingAPI"
        ]
      }
    },
    "/api/v1/users/{phone_number}/status": {
      "patch": {
        "summary": "Updates user status",
        "operationId": "UpdateUserStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "phone_number",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/covitraceUpdateUserStatusRequest"
            }
          }
        ],
        "tags": [
          "LocationTracingAPI"
        ]
      }
    }
  },
  "definitions": {
    "covitraceAddUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/covitraceUser"
        }
      },
      "title": "AddUserRequest is request to add a user"
    },
    "covitraceBroadCastMessageFilter": {
      "type": "string",
      "enum": [
        "ALL",
        "BY_COUNTY",
        "POSITIVES",
        "NEGATIVES"
      ],
      "default": "ALL",
      "title": "BroadCastMessageFilter is type filter for broadcast messages"
    },
    "covitraceBroadCastMessageRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/covitraceMessageType"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/covitraceBroadCastMessageFilter"
          }
        },
        "topics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "BroadCastMessageRequest is request to broadcast message to users"
    },
    "covitraceBroadCastMessageResponse": {
      "type": "object",
      "properties": {
        "broadcast_message_id": {
          "type": "string"
        }
      },
      "title": "BroadCastMessageResponse is response after a message has been broadcasted containing the broadcast id"
    },
    "covitraceContactData": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "user_phone": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "patient_phone": {
          "type": "string"
        },
        "device_token": {
          "type": "string"
        },
        "contact_points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/covitraceContactPoint"
          }
        }
      },
      "title": "ContactData contains locational contacts infomation"
    },
    "covitraceContactPoint": {
      "type": "object",
      "properties": {
        "geo_fence_id": {
          "type": "string"
        },
        "time_id": {
          "type": "string"
        }
      },
      "title": "ContactPoint is a geographic contact point at a particular time"
    },
    "covitraceContactTracingOperation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "county": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "payload": {
          "$ref": "#/definitions/googlelongrunningOperation"
        }
      },
      "title": "ContactTracingOperation is contains data for contact tracing"
    },
    "covitraceContactTracingResponse": {
      "type": "object",
      "properties": {
        "operation_id": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "ContactTracingResponse contains the ID of the contact tracing operation"
    },
    "covitraceListOperationsResponse": {
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/covitraceContactTracingOperation"
          }
        },
        "next_page_token": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ListOperationsResponse is response containing collection contact tracing operation"
    },
    "covitraceListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/covitraceUser"
          }
        },
        "next_page_token": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ListUsersResponse is response after fetching users"
    },
    "covitraceLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "format": "float"
        },
        "latitude": {
          "type": "number",
          "format": "float"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "accuracy": {
          "type": "number",
          "format": "float"
        },
        "altitude": {
          "type": "number",
          "format": "float"
        },
        "speed": {
          "type": "number",
          "format": "float"
        },
        "speed_accuracy": {
          "type": "number",
          "format": "float"
        },
        "placemark": {
          "type": "string"
        },
        "geo_fence_id": {
          "type": "string"
        },
        "time_id": {
          "type": "string"
        }
      },
      "title": "Represents a geographic location"
    },
    "covitraceMessage": {
      "type": "object",
      "properties": {
        "message_id": {
          "type": "string"
        },
        "user_phone": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "notification": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "sent": {
          "type": "boolean",
          "format": "boolean"
        },
        "type": {
          "$ref": "#/definitions/covitraceMessageType"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "Message is a message payload"
    },
    "covitraceMessageType": {
      "type": "string",
      "enum": [
        "ANY",
        "ALERT",
        "WARNING",
        "INFO"
      ],
      "default": "ANY",
      "title": "MessageType is category of a message"
    },
    "covitraceMessages": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/covitraceMessage"
          }
        }
      },
      "title": "Messages is a collection of user messages"
    },
    "covitraceSendLocationRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "status_id": {
          "$ref": "#/definitions/covitraceStatus"
        },
        "location": {
          "$ref": "#/definitions/covitraceLocation"
        }
      },
      "title": "SendLocationRequest is request to send a single location"
    },
    "covitraceSendLocationsRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "status_id": {
          "$ref": "#/definitions/covitraceStatus"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/covitraceLocation"
          }
        }
      },
      "title": "SendLocationsRequest is request to send a collection of location"
    },
    "covitraceSendMessageResponse": {
      "type": "object",
      "properties": {
        "message_id": {
          "type": "string"
        }
      },
      "title": "SendMessageResponse is response after sending message contains message id"
    },
    "covitraceStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "POSITIVE",
        "NEGATIVE",
        "RECOVERED"
      ],
      "default": "UNKNOWN",
      "title": "Status is user status"
    },
    "covitraceTraceUserLocationsRequest": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "since_date": {
          "type": "string"
        },
        "counties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "TraceUserLocationsRequest is request to trace a user locations"
    },
    "covitraceTraceUsersLocationsRequest": {
      "type": "object",
      "properties": {
        "counties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "since_date": {
          "type": "string"
        }
      },
      "title": "TraceUserLocationsRequest is request to trace a user locations"
    },
    "covitraceUpdateUserStatusRequest": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/covitraceStatus"
        }
      },
      "title": "UpdateUserStatusRequest is request to update user status"
    },
    "covitraceUser": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/covitraceStatus"
        },
        "device_token": {
          "type": "string"
        },
        "traced": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "User is an app user"
    },
    "googlelongrunningOperation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`."
        },
        "metadata": {
          "$ref": "#/definitions/protobufAny",
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any."
        },
        "done": {
          "type": "boolean",
          "format": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."
        },
        "error": {
          "$ref": "#/definitions/googlerpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "$ref": "#/definitions/protobufAny",
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\n[google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "title": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    }
  }
}
