// Code generated by protoc-gen-go. DO NOT EDIT.
// source: locationv2.proto

package location

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	longrunning "google.golang.org/genproto/googleapis/longrunning"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Status is user status
type Status int32

const (
	Status_UNKNOWN   Status = 0
	Status_POSITIVE  Status = 1
	Status_NEGATIVE  Status = 2
	Status_RECOVERED Status = 3
)

var Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "POSITIVE",
	2: "NEGATIVE",
	3: "RECOVERED",
}

var Status_value = map[string]int32{
	"UNKNOWN":   0,
	"POSITIVE":  1,
	"NEGATIVE":  2,
	"RECOVERED": 3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{0}
}

// BroadCastMessageFilter is type filter for broadcast messages
type BroadCastMessageFilter int32

const (
	BroadCastMessageFilter_ALL       BroadCastMessageFilter = 0
	BroadCastMessageFilter_BY_COUNTY BroadCastMessageFilter = 1
	BroadCastMessageFilter_POSITIVES BroadCastMessageFilter = 2
	BroadCastMessageFilter_NEGATIVES BroadCastMessageFilter = 3
)

var BroadCastMessageFilter_name = map[int32]string{
	0: "ALL",
	1: "BY_COUNTY",
	2: "POSITIVES",
	3: "NEGATIVES",
}

var BroadCastMessageFilter_value = map[string]int32{
	"ALL":       0,
	"BY_COUNTY": 1,
	"POSITIVES": 2,
	"NEGATIVES": 3,
}

func (x BroadCastMessageFilter) String() string {
	return proto.EnumName(BroadCastMessageFilter_name, int32(x))
}

func (BroadCastMessageFilter) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{1}
}

// MessageType is category of a message
type MessageType int32

const (
	MessageType_ANY     MessageType = 0
	MessageType_ALERT   MessageType = 1
	MessageType_WARNING MessageType = 2
	MessageType_INFO    MessageType = 3
)

var MessageType_name = map[int32]string{
	0: "ANY",
	1: "ALERT",
	2: "WARNING",
	3: "INFO",
}

var MessageType_value = map[string]int32{
	"ANY":     0,
	"ALERT":   1,
	"WARNING": 2,
	"INFO":    3,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{2}
}

// Represents a geographic location
type Location struct {
	Longitude            float32  `protobuf:"fixed32,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float32  `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Accuracy             float32  `protobuf:"fixed32,4,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	Altitude             float32  `protobuf:"fixed32,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Speed                float32  `protobuf:"fixed32,6,opt,name=speed,proto3" json:"speed,omitempty"`
	SpeedAccuracy        float32  `protobuf:"fixed32,7,opt,name=speed_accuracy,json=speedAccuracy,proto3" json:"speed_accuracy,omitempty"`
	Placemark            string   `protobuf:"bytes,8,opt,name=placemark,proto3" json:"placemark,omitempty"`
	GeoFenceId           string   `protobuf:"bytes,9,opt,name=geo_fence_id,json=geoFenceId,proto3" json:"geo_fence_id,omitempty"`
	TimeId               string   `protobuf:"bytes,11,opt,name=time_id,json=timeId,proto3" json:"time_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Location) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Location) GetAccuracy() float32 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *Location) GetAltitude() float32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *Location) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *Location) GetSpeedAccuracy() float32 {
	if m != nil {
		return m.SpeedAccuracy
	}
	return 0
}

func (m *Location) GetPlacemark() string {
	if m != nil {
		return m.Placemark
	}
	return ""
}

func (m *Location) GetGeoFenceId() string {
	if m != nil {
		return m.GeoFenceId
	}
	return ""
}

func (m *Location) GetTimeId() string {
	if m != nil {
		return m.TimeId
	}
	return ""
}

// SendLocationRequest is request to send a single location
type SendLocationRequest struct {
	UserId               string    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StatusId             Status    `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3,enum=covitrace.Status" json:"status_id,omitempty"`
	Location             *Location `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SendLocationRequest) Reset()         { *m = SendLocationRequest{} }
func (m *SendLocationRequest) String() string { return proto.CompactTextString(m) }
func (*SendLocationRequest) ProtoMessage()    {}
func (*SendLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{1}
}

func (m *SendLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendLocationRequest.Unmarshal(m, b)
}
func (m *SendLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendLocationRequest.Marshal(b, m, deterministic)
}
func (m *SendLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendLocationRequest.Merge(m, src)
}
func (m *SendLocationRequest) XXX_Size() int {
	return xxx_messageInfo_SendLocationRequest.Size(m)
}
func (m *SendLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendLocationRequest proto.InternalMessageInfo

func (m *SendLocationRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SendLocationRequest) GetStatusId() Status {
	if m != nil {
		return m.StatusId
	}
	return Status_UNKNOWN
}

func (m *SendLocationRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

// SendLocationsRequest is request to send a collection of location
type SendLocationsRequest struct {
	UserId               string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StatusId             Status      `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3,enum=covitrace.Status" json:"status_id,omitempty"`
	Locations            []*Location `protobuf:"bytes,3,rep,name=locations,proto3" json:"locations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SendLocationsRequest) Reset()         { *m = SendLocationsRequest{} }
func (m *SendLocationsRequest) String() string { return proto.CompactTextString(m) }
func (*SendLocationsRequest) ProtoMessage()    {}
func (*SendLocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{2}
}

func (m *SendLocationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendLocationsRequest.Unmarshal(m, b)
}
func (m *SendLocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendLocationsRequest.Marshal(b, m, deterministic)
}
func (m *SendLocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendLocationsRequest.Merge(m, src)
}
func (m *SendLocationsRequest) XXX_Size() int {
	return xxx_messageInfo_SendLocationsRequest.Size(m)
}
func (m *SendLocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendLocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendLocationsRequest proto.InternalMessageInfo

func (m *SendLocationsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SendLocationsRequest) GetStatusId() Status {
	if m != nil {
		return m.StatusId
	}
	return Status_UNKNOWN
}

func (m *SendLocationsRequest) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

// UpdateUserStatusRequest is request to update user status
type UpdateUserStatusRequest struct {
	PhoneNumber          string   `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=covitrace.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserStatusRequest) Reset()         { *m = UpdateUserStatusRequest{} }
func (m *UpdateUserStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserStatusRequest) ProtoMessage()    {}
func (*UpdateUserStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{3}
}

func (m *UpdateUserStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserStatusRequest.Unmarshal(m, b)
}
func (m *UpdateUserStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserStatusRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserStatusRequest.Merge(m, src)
}
func (m *UpdateUserStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserStatusRequest.Size(m)
}
func (m *UpdateUserStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserStatusRequest proto.InternalMessageInfo

func (m *UpdateUserStatusRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *UpdateUserStatusRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

// AddUserRequest is request to add a user
type AddUserRequest struct {
	PhoneNumber          string   `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	StatusId             Status   `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3,enum=covitrace.Status" json:"status_id,omitempty"`
	FullName             string   `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	DeviceToken          string   `protobuf:"bytes,4,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	County               string   `protobuf:"bytes,5,opt,name=county,proto3" json:"county,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserRequest) Reset()         { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()    {}
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{4}
}

func (m *AddUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserRequest.Unmarshal(m, b)
}
func (m *AddUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserRequest.Marshal(b, m, deterministic)
}
func (m *AddUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserRequest.Merge(m, src)
}
func (m *AddUserRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserRequest.Size(m)
}
func (m *AddUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserRequest proto.InternalMessageInfo

func (m *AddUserRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *AddUserRequest) GetStatusId() Status {
	if m != nil {
		return m.StatusId
	}
	return Status_UNKNOWN
}

func (m *AddUserRequest) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *AddUserRequest) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

func (m *AddUserRequest) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

// TraceUserLocationsRequest is request to trace a user locations
type TraceUserLocationsRequest struct {
	PhoneNumber          string   `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	SinceDate            string   `protobuf:"bytes,2,opt,name=since_date,json=sinceDate,proto3" json:"since_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceUserLocationsRequest) Reset()         { *m = TraceUserLocationsRequest{} }
func (m *TraceUserLocationsRequest) String() string { return proto.CompactTextString(m) }
func (*TraceUserLocationsRequest) ProtoMessage()    {}
func (*TraceUserLocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{5}
}

func (m *TraceUserLocationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceUserLocationsRequest.Unmarshal(m, b)
}
func (m *TraceUserLocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceUserLocationsRequest.Marshal(b, m, deterministic)
}
func (m *TraceUserLocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceUserLocationsRequest.Merge(m, src)
}
func (m *TraceUserLocationsRequest) XXX_Size() int {
	return xxx_messageInfo_TraceUserLocationsRequest.Size(m)
}
func (m *TraceUserLocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceUserLocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TraceUserLocationsRequest proto.InternalMessageInfo

func (m *TraceUserLocationsRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TraceUserLocationsRequest) GetSinceDate() string {
	if m != nil {
		return m.SinceDate
	}
	return ""
}

// ContactData contains locational contacts infomation
type ContactData struct {
	Count                int32           `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	UserPhone            string          `protobuf:"bytes,2,opt,name=user_phone,json=userPhone,proto3" json:"user_phone,omitempty"`
	FullName             string          `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	PatientPhone         string          `protobuf:"bytes,4,opt,name=patient_phone,json=patientPhone,proto3" json:"patient_phone,omitempty"`
	DeviceToken          string          `protobuf:"bytes,5,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	ContactPoints        []*ContactPoint `protobuf:"bytes,6,rep,name=contact_points,json=contactPoints,proto3" json:"contact_points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ContactData) Reset()         { *m = ContactData{} }
func (m *ContactData) String() string { return proto.CompactTextString(m) }
func (*ContactData) ProtoMessage()    {}
func (*ContactData) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{6}
}

func (m *ContactData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactData.Unmarshal(m, b)
}
func (m *ContactData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactData.Marshal(b, m, deterministic)
}
func (m *ContactData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactData.Merge(m, src)
}
func (m *ContactData) XXX_Size() int {
	return xxx_messageInfo_ContactData.Size(m)
}
func (m *ContactData) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactData.DiscardUnknown(m)
}

var xxx_messageInfo_ContactData proto.InternalMessageInfo

func (m *ContactData) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ContactData) GetUserPhone() string {
	if m != nil {
		return m.UserPhone
	}
	return ""
}

func (m *ContactData) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *ContactData) GetPatientPhone() string {
	if m != nil {
		return m.PatientPhone
	}
	return ""
}

func (m *ContactData) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

func (m *ContactData) GetContactPoints() []*ContactPoint {
	if m != nil {
		return m.ContactPoints
	}
	return nil
}

// BroadCastMessageResponse is response after a message has been broadcasted containing the broadcast id
type BroadCastMessageResponse struct {
	BroadcastMessageId   string   `protobuf:"bytes,1,opt,name=broadcast_message_id,json=broadcastMessageId,proto3" json:"broadcast_message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadCastMessageResponse) Reset()         { *m = BroadCastMessageResponse{} }
func (m *BroadCastMessageResponse) String() string { return proto.CompactTextString(m) }
func (*BroadCastMessageResponse) ProtoMessage()    {}
func (*BroadCastMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{7}
}

func (m *BroadCastMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadCastMessageResponse.Unmarshal(m, b)
}
func (m *BroadCastMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadCastMessageResponse.Marshal(b, m, deterministic)
}
func (m *BroadCastMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadCastMessageResponse.Merge(m, src)
}
func (m *BroadCastMessageResponse) XXX_Size() int {
	return xxx_messageInfo_BroadCastMessageResponse.Size(m)
}
func (m *BroadCastMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadCastMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BroadCastMessageResponse proto.InternalMessageInfo

func (m *BroadCastMessageResponse) GetBroadcastMessageId() string {
	if m != nil {
		return m.BroadcastMessageId
	}
	return ""
}

// ContactPoint is a geographic contact point at a particular time
type ContactPoint struct {
	GeoFenceId           string   `protobuf:"bytes,1,opt,name=geo_fence_id,json=geoFenceId,proto3" json:"geo_fence_id,omitempty"`
	TimeId               string   `protobuf:"bytes,2,opt,name=time_id,json=timeId,proto3" json:"time_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactPoint) Reset()         { *m = ContactPoint{} }
func (m *ContactPoint) String() string { return proto.CompactTextString(m) }
func (*ContactPoint) ProtoMessage()    {}
func (*ContactPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{8}
}

func (m *ContactPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactPoint.Unmarshal(m, b)
}
func (m *ContactPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactPoint.Marshal(b, m, deterministic)
}
func (m *ContactPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactPoint.Merge(m, src)
}
func (m *ContactPoint) XXX_Size() int {
	return xxx_messageInfo_ContactPoint.Size(m)
}
func (m *ContactPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactPoint.DiscardUnknown(m)
}

var xxx_messageInfo_ContactPoint proto.InternalMessageInfo

func (m *ContactPoint) GetGeoFenceId() string {
	if m != nil {
		return m.GeoFenceId
	}
	return ""
}

func (m *ContactPoint) GetTimeId() string {
	if m != nil {
		return m.TimeId
	}
	return ""
}

// BroadCastMessageRequest is request to broadcast message to users
type BroadCastMessageRequest struct {
	Title                string                   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Message              string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Type                 MessageType              `protobuf:"varint,3,opt,name=type,proto3,enum=covitrace.MessageType" json:"type,omitempty"`
	Filters              []BroadCastMessageFilter `protobuf:"varint,4,rep,packed,name=filters,proto3,enum=covitrace.BroadCastMessageFilter" json:"filters,omitempty"`
	Topics               []string                 `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`
	Payload              map[string]string        `protobuf:"bytes,6,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BroadCastMessageRequest) Reset()         { *m = BroadCastMessageRequest{} }
func (m *BroadCastMessageRequest) String() string { return proto.CompactTextString(m) }
func (*BroadCastMessageRequest) ProtoMessage()    {}
func (*BroadCastMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{9}
}

func (m *BroadCastMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadCastMessageRequest.Unmarshal(m, b)
}
func (m *BroadCastMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadCastMessageRequest.Marshal(b, m, deterministic)
}
func (m *BroadCastMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadCastMessageRequest.Merge(m, src)
}
func (m *BroadCastMessageRequest) XXX_Size() int {
	return xxx_messageInfo_BroadCastMessageRequest.Size(m)
}
func (m *BroadCastMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadCastMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BroadCastMessageRequest proto.InternalMessageInfo

func (m *BroadCastMessageRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BroadCastMessageRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BroadCastMessageRequest) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_ANY
}

func (m *BroadCastMessageRequest) GetFilters() []BroadCastMessageFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *BroadCastMessageRequest) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *BroadCastMessageRequest) GetPayload() map[string]string {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Message is a message payload
type Message struct {
	MessageId            string            `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserPhone            string            `protobuf:"bytes,2,opt,name=user_phone,json=userPhone,proto3" json:"user_phone,omitempty"`
	Title                string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Notification         string            `protobuf:"bytes,4,opt,name=notification,proto3" json:"notification,omitempty"`
	DateTime             string            `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	Sent                 bool              `protobuf:"varint,6,opt,name=sent,proto3" json:"sent,omitempty"`
	Type                 MessageType       `protobuf:"varint,7,opt,name=type,proto3,enum=covitrace.MessageType" json:"type,omitempty"`
	Data                 map[string]string `protobuf:"bytes,8,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{10}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *Message) GetUserPhone() string {
	if m != nil {
		return m.UserPhone
	}
	return ""
}

func (m *Message) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Message) GetNotification() string {
	if m != nil {
		return m.Notification
	}
	return ""
}

func (m *Message) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *Message) GetSent() bool {
	if m != nil {
		return m.Sent
	}
	return false
}

func (m *Message) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_ANY
}

func (m *Message) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

// SendMessageResponse is response after sending message contains message id
type SendMessageResponse struct {
	MessageId            string   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageResponse) Reset()         { *m = SendMessageResponse{} }
func (m *SendMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SendMessageResponse) ProtoMessage()    {}
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{11}
}

func (m *SendMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageResponse.Unmarshal(m, b)
}
func (m *SendMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageResponse.Marshal(b, m, deterministic)
}
func (m *SendMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageResponse.Merge(m, src)
}
func (m *SendMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SendMessageResponse.Size(m)
}
func (m *SendMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageResponse proto.InternalMessageInfo

func (m *SendMessageResponse) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

// GetMessagesRequest is request to get user messages
type GetMessagesRequest struct {
	PhoneNumber          string   `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PageToken            int32    `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMessagesRequest) Reset()         { *m = GetMessagesRequest{} }
func (m *GetMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*GetMessagesRequest) ProtoMessage()    {}
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{12}
}

func (m *GetMessagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMessagesRequest.Unmarshal(m, b)
}
func (m *GetMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMessagesRequest.Marshal(b, m, deterministic)
}
func (m *GetMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMessagesRequest.Merge(m, src)
}
func (m *GetMessagesRequest) XXX_Size() int {
	return xxx_messageInfo_GetMessagesRequest.Size(m)
}
func (m *GetMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMessagesRequest proto.InternalMessageInfo

func (m *GetMessagesRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *GetMessagesRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *GetMessagesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Messages is a collection of user messages
type Messages struct {
	Messages             []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Messages) Reset()         { *m = Messages{} }
func (m *Messages) String() string { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()    {}
func (*Messages) Descriptor() ([]byte, []int) {
	return fileDescriptor_35190a0cb6740d9b, []int{13}
}

func (m *Messages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Messages.Unmarshal(m, b)
}
func (m *Messages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Messages.Marshal(b, m, deterministic)
}
func (m *Messages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Messages.Merge(m, src)
}
func (m *Messages) XXX_Size() int {
	return xxx_messageInfo_Messages.Size(m)
}
func (m *Messages) XXX_DiscardUnknown() {
	xxx_messageInfo_Messages.DiscardUnknown(m)
}

var xxx_messageInfo_Messages proto.InternalMessageInfo

func (m *Messages) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func init() {
	proto.RegisterEnum("covitrace.Status", Status_name, Status_value)
	proto.RegisterEnum("covitrace.BroadCastMessageFilter", BroadCastMessageFilter_name, BroadCastMessageFilter_value)
	proto.RegisterEnum("covitrace.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*Location)(nil), "covitrace.Location")
	proto.RegisterType((*SendLocationRequest)(nil), "covitrace.SendLocationRequest")
	proto.RegisterType((*SendLocationsRequest)(nil), "covitrace.SendLocationsRequest")
	proto.RegisterType((*UpdateUserStatusRequest)(nil), "covitrace.UpdateUserStatusRequest")
	proto.RegisterType((*AddUserRequest)(nil), "covitrace.AddUserRequest")
	proto.RegisterType((*TraceUserLocationsRequest)(nil), "covitrace.TraceUserLocationsRequest")
	proto.RegisterType((*ContactData)(nil), "covitrace.ContactData")
	proto.RegisterType((*BroadCastMessageResponse)(nil), "covitrace.BroadCastMessageResponse")
	proto.RegisterType((*ContactPoint)(nil), "covitrace.ContactPoint")
	proto.RegisterType((*BroadCastMessageRequest)(nil), "covitrace.BroadCastMessageRequest")
	proto.RegisterMapType((map[string]string)(nil), "covitrace.BroadCastMessageRequest.PayloadEntry")
	proto.RegisterType((*Message)(nil), "covitrace.Message")
	proto.RegisterMapType((map[string]string)(nil), "covitrace.Message.DataEntry")
	proto.RegisterType((*SendMessageResponse)(nil), "covitrace.SendMessageResponse")
	proto.RegisterType((*GetMessagesRequest)(nil), "covitrace.GetMessagesRequest")
	proto.RegisterType((*Messages)(nil), "covitrace.Messages")
}

func init() { proto.RegisterFile("locationv2.proto", fileDescriptor_35190a0cb6740d9b) }

var fileDescriptor_35190a0cb6740d9b = []byte{
	// 1450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x6e, 0xdb, 0xc6,
	0x12, 0x0e, 0x25, 0xcb, 0x22, 0x47, 0xb2, 0xc1, 0x6c, 0x0c, 0x9b, 0x91, 0x9d, 0x03, 0x85, 0x3e,
	0xe7, 0xc0, 0x71, 0x1b, 0x29, 0x51, 0x0b, 0x34, 0x70, 0x81, 0xa2, 0x8a, 0xa3, 0x04, 0x42, 0x5d,
	0xd9, 0xa0, 0xed, 0x04, 0x09, 0x50, 0x08, 0x6b, 0x72, 0xad, 0x12, 0xa6, 0x48, 0x86, 0xbb, 0x72,
	0xa1, 0x14, 0xe9, 0x45, 0xfb, 0x00, 0x01, 0xda, 0x17, 0xe9, 0x7d, 0x9f, 0xa0, 0x37, 0x05, 0x8a,
	0xf6, 0x11, 0x0a, 0xf4, 0x35, 0x8a, 0xfd, 0xa1, 0x44, 0x8b, 0x91, 0x1b, 0x17, 0xbd, 0x92, 0xe6,
	0xf7, 0x9b, 0x9d, 0x99, 0x9d, 0x1d, 0x82, 0x19, 0x44, 0x2e, 0x66, 0x7e, 0x14, 0x9e, 0xb7, 0x1a,
	0x71, 0x12, 0xb1, 0x08, 0x19, 0x6e, 0x74, 0xee, 0xb3, 0x04, 0xbb, 0xa4, 0xb6, 0x3e, 0x88, 0xa2,
	0x41, 0x40, 0x9a, 0x42, 0x70, 0x32, 0x3a, 0x6d, 0x92, 0x61, 0xcc, 0xc6, 0x52, 0xaf, 0xb6, 0xa9,
	0x84, 0x41, 0x14, 0x0e, 0x92, 0x51, 0x18, 0xfa, 0xe1, 0xa0, 0x19, 0xc5, 0x24, 0x11, 0xde, 0xa8,
	0x52, 0xda, 0x50, 0x4a, 0x38, 0xf6, 0x9b, 0x38, 0x0c, 0x23, 0x76, 0x41, 0xfa, 0xbe, 0xf8, 0x71,
	0xef, 0x0e, 0x48, 0x78, 0x97, 0x7e, 0x85, 0x07, 0x03, 0x92, 0x34, 0xa3, 0x58, 0x68, 0xe4, 0xb5,
	0xed, 0x1f, 0x0b, 0xa0, 0xef, 0xa9, 0x68, 0xd1, 0x06, 0x18, 0x1c, 0xd8, 0x67, 0x23, 0x8f, 0x58,
	0x5a, 0x5d, 0xdb, 0x2a, 0x38, 0x53, 0x06, 0xaa, 0x81, 0x1e, 0x60, 0x26, 0x85, 0x05, 0x21, 0x9c,
	0xd0, 0xdc, 0x92, 0xf9, 0x43, 0x42, 0x19, 0x1e, 0xc6, 0x56, 0xb1, 0xae, 0x6d, 0x15, 0x9d, 0x29,
	0x83, 0x5b, 0x62, 0xd7, 0x1d, 0x25, 0xd8, 0x1d, 0x5b, 0x0b, 0xd2, 0x32, 0xa5, 0x85, 0x2c, 0x50,
	0x5e, 0x4b, 0x4a, 0xa6, 0x68, 0xb4, 0x02, 0x25, 0x1a, 0x13, 0xe2, 0x59, 0x8b, 0x42, 0x20, 0x09,
	0xf4, 0x3f, 0x58, 0x16, 0x7f, 0xfa, 0x13, 0x9f, 0x65, 0x21, 0x5e, 0x12, 0xdc, 0x76, 0xea, 0x78,
	0x03, 0x8c, 0x38, 0xc0, 0x2e, 0x19, 0xe2, 0xe4, 0xcc, 0xd2, 0xeb, 0xda, 0x96, 0xe1, 0x4c, 0x19,
	0xa8, 0x0e, 0xd5, 0x01, 0x89, 0xfa, 0xa7, 0x24, 0x74, 0x49, 0xdf, 0xf7, 0x2c, 0x43, 0x28, 0xc0,
	0x80, 0x44, 0x8f, 0x39, 0xab, 0xeb, 0xa1, 0x35, 0x28, 0xf3, 0x13, 0x70, 0x61, 0x45, 0x08, 0x17,
	0x39, 0xd9, 0xf5, 0xec, 0x37, 0x1a, 0xdc, 0x38, 0x24, 0xa1, 0x97, 0xa6, 0xcd, 0x21, 0x2f, 0x47,
	0x84, 0x32, 0x6e, 0x30, 0xa2, 0x24, 0xe1, 0x06, 0x9a, 0x34, 0xe0, 0x64, 0xd7, 0x43, 0x0d, 0x30,
	0x28, 0xc3, 0x6c, 0x44, 0xb9, 0x88, 0x67, 0x6e, 0xb9, 0x75, 0xbd, 0x31, 0x69, 0x88, 0xc6, 0xa1,
	0x90, 0x39, 0xba, 0xd4, 0xe9, 0x7a, 0xa8, 0x09, 0x7a, 0xda, 0x40, 0x22, 0x97, 0x95, 0xd6, 0x8d,
	0x8c, 0xfa, 0x04, 0x76, 0xa2, 0x64, 0x7f, 0xaf, 0xc1, 0x4a, 0x36, 0x22, 0xfa, 0xaf, 0x87, 0x74,
	0x9f, 0x77, 0x86, 0x72, 0x6e, 0x15, 0xeb, 0xc5, 0x79, 0x31, 0x4d, 0xb5, 0xec, 0x01, 0xac, 0x1d,
	0xc7, 0x1e, 0x66, 0xe4, 0x98, 0x92, 0x44, 0x39, 0x54, 0x61, 0xdd, 0x86, 0x6a, 0xfc, 0x65, 0x14,
	0x92, 0x7e, 0x38, 0x1a, 0x9e, 0x90, 0x44, 0xc5, 0x56, 0x11, 0xbc, 0x9e, 0x60, 0xa1, 0x3b, 0xb0,
	0x28, 0xc1, 0xe7, 0x47, 0xa7, 0x14, 0xec, 0x9f, 0x34, 0x58, 0x6e, 0x7b, 0x1e, 0x87, 0xb9, 0x02,
	0xc0, 0x55, 0x33, 0xb0, 0x0e, 0xc6, 0xe9, 0x28, 0x08, 0xfa, 0x21, 0x1e, 0x12, 0x51, 0x15, 0xc3,
	0xd1, 0x39, 0xa3, 0x87, 0x87, 0x84, 0xe3, 0x79, 0xe4, 0xdc, 0x77, 0x49, 0x9f, 0x45, 0x67, 0x24,
	0x14, 0x4d, 0x6e, 0x38, 0x15, 0xc9, 0x3b, 0xe2, 0x2c, 0xb4, 0x0a, 0x8b, 0x6e, 0x34, 0x0a, 0xd9,
	0x58, 0x74, 0xb9, 0xe1, 0x28, 0xca, 0xfe, 0x02, 0x6e, 0x1e, 0x71, 0x44, 0x1e, 0x7e, 0xae, 0x7e,
	0xef, 0x70, 0x8e, 0x5b, 0x00, 0xd4, 0xe7, 0x4d, 0xcc, 0x53, 0x2d, 0x0e, 0x62, 0x38, 0x86, 0xe0,
	0x3c, 0xc2, 0x8c, 0xd8, 0x7f, 0x6a, 0x50, 0xd9, 0x8d, 0x42, 0x86, 0x5d, 0xf6, 0x08, 0x33, 0xcc,
	0xaf, 0x94, 0x00, 0x16, 0xae, 0x4a, 0x8e, 0x24, 0xb8, 0x13, 0xd1, 0x27, 0xc2, 0x71, 0xea, 0x84,
	0x73, 0x0e, 0x38, 0xe3, 0xf2, 0xb3, 0x6f, 0xc2, 0x52, 0x8c, 0x99, 0x4f, 0x42, 0xa6, 0xcc, 0xe5,
	0xe1, 0xab, 0x8a, 0x29, 0x3d, 0xcc, 0x26, 0xa8, 0x94, 0x4f, 0xd0, 0x27, 0xb0, 0xec, 0xca, 0x40,
	0xfb, 0x71, 0xe4, 0x87, 0x8c, 0x5a, 0x8b, 0xa2, 0xcf, 0xd6, 0x32, 0x55, 0x51, 0x27, 0x39, 0xe0,
	0x72, 0x67, 0xc9, 0xcd, 0x50, 0xd4, 0xde, 0x03, 0xeb, 0x61, 0x12, 0x61, 0x6f, 0x17, 0x53, 0xf6,
	0x39, 0xa1, 0x14, 0x0f, 0x88, 0x43, 0x68, 0x1c, 0x85, 0x94, 0xa0, 0x7b, 0xb0, 0x72, 0xc2, 0x65,
	0x2e, 0xa6, 0xac, 0x3f, 0x94, 0xc2, 0xe9, 0xa5, 0x40, 0x13, 0x99, 0xb2, 0xeb, 0x7a, 0x76, 0x17,
	0xaa, 0x59, 0xb0, 0xdc, 0xbc, 0xd0, 0x2e, 0x9b, 0x17, 0x85, 0x0b, 0xf3, 0xe2, 0xd7, 0x02, 0xac,
	0xe5, 0x23, 0x93, 0x05, 0x5e, 0x81, 0x12, 0xf3, 0x59, 0x40, 0x94, 0x3f, 0x49, 0x20, 0x0b, 0xca,
	0x2a, 0x48, 0xe5, 0x2a, 0x25, 0xd1, 0x36, 0x2c, 0xb0, 0x71, 0x2c, 0x8b, 0xb0, 0xdc, 0x5a, 0xcd,
	0xa4, 0x46, 0x39, 0x3e, 0x1a, 0xc7, 0xc4, 0x11, 0x3a, 0xe8, 0x63, 0x28, 0x9f, 0xfa, 0x01, 0x23,
	0x09, 0xb5, 0x16, 0xea, 0xc5, 0xad, 0xe5, 0xd6, 0xed, 0x8c, 0xfa, 0x6c, 0x40, 0x8f, 0x85, 0xa6,
	0x93, 0x5a, 0xf0, 0x76, 0x65, 0x51, 0xec, 0xbb, 0xd4, 0x2a, 0xd5, 0x8b, 0xe2, 0x30, 0x82, 0x42,
	0x5d, 0x28, 0xc7, 0x78, 0x1c, 0x44, 0xd8, 0x53, 0xe5, 0x69, 0x5e, 0xe2, 0x54, 0x9d, 0xb2, 0x71,
	0x20, 0x2d, 0x3a, 0x21, 0x4b, 0xc6, 0x4e, 0x6a, 0x5f, 0xdb, 0x81, 0x6a, 0x56, 0x80, 0x4c, 0x28,
	0x9e, 0x91, 0xb1, 0xca, 0x04, 0xff, 0xcb, 0xb3, 0x73, 0x8e, 0x83, 0x51, 0x9a, 0x05, 0x49, 0xec,
	0x14, 0x1e, 0x68, 0xf6, 0xcf, 0x05, 0x28, 0x2b, 0x10, 0xde, 0xbc, 0xb9, 0x92, 0x1a, 0xc3, 0xb4,
	0x92, 0x7f, 0xd7, 0xdb, 0x93, 0x0a, 0x14, 0xb3, 0x15, 0xb0, 0xa1, 0x1a, 0x46, 0xcc, 0x3f, 0xf5,
	0xd5, 0x18, 0x56, 0x3d, 0x9d, 0xe5, 0xf1, 0x5b, 0xc1, 0xef, 0x5c, 0x9f, 0x97, 0x59, 0x35, 0xb4,
	0xce, 0x19, 0x47, 0xfe, 0x90, 0x20, 0x04, 0x0b, 0x94, 0x84, 0x4c, 0xbc, 0x5c, 0xba, 0x23, 0xfe,
	0x4f, 0x8a, 0x57, 0x7e, 0x87, 0xe2, 0xdd, 0x83, 0x05, 0x0f, 0x33, 0x6c, 0xe9, 0x22, 0xc9, 0x1b,
	0x79, 0xdd, 0x06, 0xbf, 0xce, 0x32, 0xa3, 0x42, 0xb3, 0xf6, 0x11, 0x18, 0x13, 0xd6, 0x95, 0x72,
	0xf9, 0xa1, 0x7c, 0xce, 0x66, 0xef, 0xcc, 0xe5, 0x69, 0xb5, 0x29, 0xa0, 0x27, 0x24, 0x2d, 0xf4,
	0x15, 0x07, 0x56, 0xcc, 0x9d, 0xca, 0x41, 0x50, 0x10, 0x63, 0xc8, 0xe0, 0x1c, 0x39, 0x06, 0xd6,
	0x41, 0x10, 0x7d, 0xea, 0xbf, 0x92, 0x35, 0x29, 0x39, 0x3a, 0x67, 0x1c, 0xfa, 0xaf, 0x88, 0xbd,
	0x03, 0x7a, 0x8a, 0x88, 0x1a, 0xa0, 0xab, 0x68, 0xa8, 0xa5, 0x89, 0x2c, 0xa1, 0x7c, 0x96, 0x9c,
	0x89, 0xce, 0xf6, 0xa7, 0xb0, 0x28, 0x87, 0x3a, 0xaa, 0x40, 0xf9, 0xb8, 0xf7, 0x59, 0x6f, 0xff,
	0x59, 0xcf, 0xbc, 0x86, 0xaa, 0xa0, 0x1f, 0xec, 0x1f, 0x76, 0x8f, 0xba, 0x4f, 0x3b, 0xa6, 0xc6,
	0xa9, 0x5e, 0xe7, 0x49, 0x5b, 0x50, 0x05, 0xb4, 0x04, 0x86, 0xd3, 0xd9, 0xdd, 0x7f, 0xda, 0x71,
	0x3a, 0x8f, 0xcc, 0xe2, 0x76, 0x0f, 0x56, 0xdf, 0x7e, 0x6d, 0x50, 0x19, 0x8a, 0xed, 0xbd, 0x3d,
	0xf3, 0x1a, 0xb7, 0x78, 0xf8, 0xbc, 0xbf, 0xbb, 0x7f, 0xdc, 0x3b, 0x7a, 0x6e, 0x6a, 0x9c, 0x4c,
	0x9d, 0x1f, 0x4a, 0x7f, 0xa9, 0xf7, 0x43, 0xb3, 0xb8, 0xfd, 0x00, 0x2a, 0x99, 0xc2, 0x0b, 0x27,
	0xbd, 0xe7, 0xe6, 0x35, 0x64, 0x40, 0xa9, 0xbd, 0xd7, 0x71, 0x8e, 0x4c, 0x8d, 0x87, 0xfa, 0xac,
	0xed, 0xf4, 0xba, 0xbd, 0x27, 0x66, 0x01, 0xe9, 0xb0, 0xd0, 0xed, 0x3d, 0xde, 0x37, 0x8b, 0xad,
	0x5f, 0x8a, 0x80, 0xd2, 0xc7, 0x82, 0xbf, 0x1e, 0x7e, 0x38, 0x68, 0x1f, 0x74, 0x91, 0x0f, 0xd5,
	0xec, 0x1a, 0x80, 0xfe, 0x93, 0x7d, 0xd0, 0xf2, 0x1b, 0x4b, 0x6d, 0xb5, 0x21, 0x37, 0xc9, 0x46,
	0xba, 0x8b, 0x36, 0x3a, 0x7c, 0x17, 0xb5, 0x6f, 0x7f, 0xfb, 0xdb, 0x1f, 0x3f, 0x14, 0xd6, 0xed,
	0x55, 0xb1, 0x62, 0x9e, 0xdf, 0x6f, 0x4e, 0x5e, 0xf5, 0x26, 0x25, 0xa1, 0xb7, 0xa3, 0x6d, 0xa3,
	0x97, 0xb0, 0x74, 0x61, 0xe3, 0xf8, 0xc7, 0x58, 0xff, 0x17, 0x58, 0x75, 0x7b, 0xfd, 0xed, 0x58,
	0xcd, 0x93, 0x51, 0x70, 0xb6, 0xa3, 0x6d, 0x6f, 0x69, 0xe8, 0x1b, 0x30, 0x67, 0x17, 0x0a, 0x64,
	0x67, 0x50, 0xe7, 0x6c, 0x1b, 0x73, 0x91, 0x1b, 0x02, 0x79, 0xab, 0xb5, 0x99, 0x22, 0xf3, 0xa1,
	0x40, 0x9b, 0x5f, 0x67, 0x1b, 0xf8, 0x75, 0x53, 0x2e, 0x00, 0xfc, 0xc8, 0x2f, 0xa0, 0xac, 0xd6,
	0x0c, 0x74, 0x33, 0x03, 0x7b, 0x71, 0xf5, 0x98, 0x8b, 0xb6, 0x21, 0xd0, 0x56, 0xed, 0xeb, 0x17,
	0xd1, 0xb0, 0xc7, 0xd3, 0xd9, 0x7a, 0xa3, 0xc1, 0xb2, 0x7a, 0x6f, 0x54, 0x3d, 0xd1, 0x6b, 0x40,
	0xf9, 0xc5, 0x00, 0xfd, 0x37, 0x83, 0x3c, 0x77, 0x6f, 0xa8, 0xdd, 0x4a, 0x83, 0xc8, 0x7c, 0x47,
	0x34, 0xf6, 0xd3, 0xef, 0x08, 0xdb, 0x16, 0xb1, 0x6c, 0xd8, 0x6b, 0x69, 0x2c, 0xc2, 0xdf, 0x34,
	0xf3, 0x3c, 0xa2, 0xdf, 0x8b, 0x60, 0xc8, 0xee, 0xe4, 0xc1, 0x10, 0x58, 0x6a, 0x07, 0x24, 0x61,
	0x2a, 0x46, 0x8a, 0x56, 0xf3, 0xaf, 0x32, 0x9f, 0x3e, 0x73, 0x8f, 0x9f, 0x83, 0x1c, 0xa6, 0xbe,
	0x9b, 0x98, 0x3b, 0x96, 0x25, 0xfe, 0x4e, 0x03, 0x73, 0xf6, 0x8a, 0x5d, 0xa8, 0xf1, 0x9c, 0x17,
	0xa6, 0xb6, 0x79, 0xa9, 0x8e, 0x9c, 0x68, 0xf9, 0x56, 0x9b, 0xc6, 0x30, 0xd9, 0x00, 0x78, 0xa1,
	0x3d, 0xa8, 0x64, 0x06, 0x22, 0x7a, 0xcb, 0x58, 0xa9, 0xcd, 0x76, 0xfb, 0x2c, 0x54, 0xee, 0x06,
	0x4d, 0xa1, 0xd2, 0x1b, 0xc4, 0xa0, 0x92, 0x19, 0xa0, 0xe8, 0x56, 0xc6, 0x63, 0x7e, 0xb0, 0xd6,
	0x6e, 0xe4, 0x83, 0xa0, 0xf6, 0x7d, 0x81, 0xf2, 0x1e, 0xba, 0x93, 0x47, 0x49, 0xc7, 0xde, 0x4c,
	0x3b, 0x3f, 0x84, 0x17, 0x93, 0xcf, 0x86, 0x93, 0x45, 0x51, 0xa3, 0x0f, 0xfe, 0x0a, 0x00, 0x00,
	0xff, 0xff, 0x4e, 0xb1, 0x32, 0xfb, 0xaf, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LocationTracingAPIClient is the client API for LocationTracingAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LocationTracingAPIClient interface {
	// Send a single location to the server
	SendLocation(ctx context.Context, in *SendLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Sends user locations
	SendLocations(ctx context.Context, opts ...grpc.CallOption) (LocationTracingAPI_SendLocationsClient, error)
	// Updates user status
	UpdateUserStatus(ctx context.Context, in *UpdateUserStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Add a new user
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type locationTracingAPIClient struct {
	cc *grpc.ClientConn
}

func NewLocationTracingAPIClient(cc *grpc.ClientConn) LocationTracingAPIClient {
	return &locationTracingAPIClient{cc}
}

func (c *locationTracingAPIClient) SendLocation(ctx context.Context, in *SendLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/covitrace.LocationTracingAPI/SendLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTracingAPIClient) SendLocations(ctx context.Context, opts ...grpc.CallOption) (LocationTracingAPI_SendLocationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LocationTracingAPI_serviceDesc.Streams[0], "/covitrace.LocationTracingAPI/SendLocations", opts...)
	if err != nil {
		return nil, err
	}
	x := &locationTracingAPISendLocationsClient{stream}
	return x, nil
}

type LocationTracingAPI_SendLocationsClient interface {
	Send(*SendLocationRequest) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type locationTracingAPISendLocationsClient struct {
	grpc.ClientStream
}

func (x *locationTracingAPISendLocationsClient) Send(m *SendLocationRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *locationTracingAPISendLocationsClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *locationTracingAPIClient) UpdateUserStatus(ctx context.Context, in *UpdateUserStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/covitrace.LocationTracingAPI/UpdateUserStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTracingAPIClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/covitrace.LocationTracingAPI/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LocationTracingAPIServer is the server API for LocationTracingAPI service.
type LocationTracingAPIServer interface {
	// Send a single location to the server
	SendLocation(context.Context, *SendLocationRequest) (*empty.Empty, error)
	// Sends user locations
	SendLocations(LocationTracingAPI_SendLocationsServer) error
	// Updates user status
	UpdateUserStatus(context.Context, *UpdateUserStatusRequest) (*empty.Empty, error)
	// Add a new user
	AddUser(context.Context, *AddUserRequest) (*empty.Empty, error)
}

func RegisterLocationTracingAPIServer(s *grpc.Server, srv LocationTracingAPIServer) {
	s.RegisterService(&_LocationTracingAPI_serviceDesc, srv)
}

func _LocationTracingAPI_SendLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTracingAPIServer).SendLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.LocationTracingAPI/SendLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTracingAPIServer).SendLocation(ctx, req.(*SendLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracingAPI_SendLocations_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LocationTracingAPIServer).SendLocations(&locationTracingAPISendLocationsServer{stream})
}

type LocationTracingAPI_SendLocationsServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*SendLocationRequest, error)
	grpc.ServerStream
}

type locationTracingAPISendLocationsServer struct {
	grpc.ServerStream
}

func (x *locationTracingAPISendLocationsServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *locationTracingAPISendLocationsServer) Recv() (*SendLocationRequest, error) {
	m := new(SendLocationRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _LocationTracingAPI_UpdateUserStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTracingAPIServer).UpdateUserStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.LocationTracingAPI/UpdateUserStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTracingAPIServer).UpdateUserStatus(ctx, req.(*UpdateUserStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracingAPI_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTracingAPIServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.LocationTracingAPI/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTracingAPIServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocationTracingAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "covitrace.LocationTracingAPI",
	HandlerType: (*LocationTracingAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendLocation",
			Handler:    _LocationTracingAPI_SendLocation_Handler,
		},
		{
			MethodName: "UpdateUserStatus",
			Handler:    _LocationTracingAPI_UpdateUserStatus_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _LocationTracingAPI_AddUser_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendLocations",
			Handler:       _LocationTracingAPI_SendLocations_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "locationv2.proto",
}

// ContactTracingClient is the client API for ContactTracing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactTracingClient interface {
	// Traces user locations and matching corresponding contact points
	TraceUserLocations(ctx context.Context, in *TraceUserLocationsRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
}

type contactTracingClient struct {
	cc *grpc.ClientConn
}

func NewContactTracingClient(cc *grpc.ClientConn) ContactTracingClient {
	return &contactTracingClient{cc}
}

func (c *contactTracingClient) TraceUserLocations(ctx context.Context, in *TraceUserLocationsRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/covitrace.ContactTracing/TraceUserLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactTracingServer is the server API for ContactTracing service.
type ContactTracingServer interface {
	// Traces user locations and matching corresponding contact points
	TraceUserLocations(context.Context, *TraceUserLocationsRequest) (*longrunning.Operation, error)
}

func RegisterContactTracingServer(s *grpc.Server, srv ContactTracingServer) {
	s.RegisterService(&_ContactTracing_serviceDesc, srv)
}

func _ContactTracing_TraceUserLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TraceUserLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactTracingServer).TraceUserLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.ContactTracing/TraceUserLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactTracingServer).TraceUserLocations(ctx, req.(*TraceUserLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactTracing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "covitrace.ContactTracing",
	HandlerType: (*ContactTracingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TraceUserLocations",
			Handler:    _ContactTracing_TraceUserLocations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "locationv2.proto",
}

// MessagingClient is the client API for Messaging service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessagingClient interface {
	// Alerts on possible contact points with a positive patient
	AlertContacts(ctx context.Context, opts ...grpc.CallOption) (Messaging_AlertContactsClient, error)
	// Broadcasts a message
	BroadCastMessage(ctx context.Context, in *BroadCastMessageRequest, opts ...grpc.CallOption) (*BroadCastMessageResponse, error)
	// Sends message to a single destination
	SendMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*SendMessageResponse, error)
	// Retrieves user messages
	GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*Messages, error)
}

type messagingClient struct {
	cc *grpc.ClientConn
}

func NewMessagingClient(cc *grpc.ClientConn) MessagingClient {
	return &messagingClient{cc}
}

func (c *messagingClient) AlertContacts(ctx context.Context, opts ...grpc.CallOption) (Messaging_AlertContactsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Messaging_serviceDesc.Streams[0], "/covitrace.Messaging/AlertContacts", opts...)
	if err != nil {
		return nil, err
	}
	x := &messagingAlertContactsClient{stream}
	return x, nil
}

type Messaging_AlertContactsClient interface {
	Send(*ContactData) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type messagingAlertContactsClient struct {
	grpc.ClientStream
}

func (x *messagingAlertContactsClient) Send(m *ContactData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messagingAlertContactsClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messagingClient) BroadCastMessage(ctx context.Context, in *BroadCastMessageRequest, opts ...grpc.CallOption) (*BroadCastMessageResponse, error) {
	out := new(BroadCastMessageResponse)
	err := c.cc.Invoke(ctx, "/covitrace.Messaging/BroadCastMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) SendMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*SendMessageResponse, error) {
	out := new(SendMessageResponse)
	err := c.cc.Invoke(ctx, "/covitrace.Messaging/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*Messages, error) {
	out := new(Messages)
	err := c.cc.Invoke(ctx, "/covitrace.Messaging/GetMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessagingServer is the server API for Messaging service.
type MessagingServer interface {
	// Alerts on possible contact points with a positive patient
	AlertContacts(Messaging_AlertContactsServer) error
	// Broadcasts a message
	BroadCastMessage(context.Context, *BroadCastMessageRequest) (*BroadCastMessageResponse, error)
	// Sends message to a single destination
	SendMessage(context.Context, *Message) (*SendMessageResponse, error)
	// Retrieves user messages
	GetMessages(context.Context, *GetMessagesRequest) (*Messages, error)
}

func RegisterMessagingServer(s *grpc.Server, srv MessagingServer) {
	s.RegisterService(&_Messaging_serviceDesc, srv)
}

func _Messaging_AlertContacts_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessagingServer).AlertContacts(&messagingAlertContactsServer{stream})
}

type Messaging_AlertContactsServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*ContactData, error)
	grpc.ServerStream
}

type messagingAlertContactsServer struct {
	grpc.ServerStream
}

func (x *messagingAlertContactsServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messagingAlertContactsServer) Recv() (*ContactData, error) {
	m := new(ContactData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Messaging_BroadCastMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadCastMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).BroadCastMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.Messaging/BroadCastMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).BroadCastMessage(ctx, req.(*BroadCastMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.Messaging/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).SendMessage(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_GetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).GetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.Messaging/GetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).GetMessages(ctx, req.(*GetMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Messaging_serviceDesc = grpc.ServiceDesc{
	ServiceName: "covitrace.Messaging",
	HandlerType: (*MessagingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BroadCastMessage",
			Handler:    _Messaging_BroadCastMessage_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Messaging_SendMessage_Handler,
		},
		{
			MethodName: "GetMessages",
			Handler:    _Messaging_GetMessages_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AlertContacts",
			Handler:       _Messaging_AlertContacts_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "locationv2.proto",
}
