// Code generated by protoc-gen-go. DO NOT EDIT.
// source: location.proto

package location

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/longrunning"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Status is user status
type Status int32

const (
	Status_UNKNOWN   Status = 0
	Status_POSITIVE  Status = 1
	Status_NEGATIVE  Status = 2
	Status_SUSPECTED Status = 3
	Status_RECOVERED Status = 4
)

var Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "POSITIVE",
	2: "NEGATIVE",
	3: "SUSPECTED",
	4: "RECOVERED",
}

var Status_value = map[string]int32{
	"UNKNOWN":   0,
	"POSITIVE":  1,
	"NEGATIVE":  2,
	"SUSPECTED": 3,
	"RECOVERED": 4,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{0}
}

// Represents a geographic location
type Location struct {
	Longitude            float32  `protobuf:"fixed32,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float32  `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Accuracy             float32  `protobuf:"fixed32,4,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	Altitude             float32  `protobuf:"fixed32,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Speed                float32  `protobuf:"fixed32,6,opt,name=speed,proto3" json:"speed,omitempty"`
	SpeedAccuracy        float32  `protobuf:"fixed32,7,opt,name=speed_accuracy,json=speedAccuracy,proto3" json:"speed_accuracy,omitempty"`
	Placemark            string   `protobuf:"bytes,8,opt,name=placemark,proto3" json:"placemark,omitempty"`
	GeoFenceId           string   `protobuf:"bytes,9,opt,name=geo_fence_id,json=geoFenceId,proto3" json:"geo_fence_id,omitempty"`
	TimeId               string   `protobuf:"bytes,11,opt,name=time_id,json=timeId,proto3" json:"time_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Location) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Location) GetAccuracy() float32 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *Location) GetAltitude() float32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *Location) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *Location) GetSpeedAccuracy() float32 {
	if m != nil {
		return m.SpeedAccuracy
	}
	return 0
}

func (m *Location) GetPlacemark() string {
	if m != nil {
		return m.Placemark
	}
	return ""
}

func (m *Location) GetGeoFenceId() string {
	if m != nil {
		return m.GeoFenceId
	}
	return ""
}

func (m *Location) GetTimeId() string {
	if m != nil {
		return m.TimeId
	}
	return ""
}

// SendLocationRequest is request to send a single location
type SendLocationRequest struct {
	UserId               string    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StatusId             Status    `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3,enum=covitrace.Status" json:"status_id,omitempty"`
	Location             *Location `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SendLocationRequest) Reset()         { *m = SendLocationRequest{} }
func (m *SendLocationRequest) String() string { return proto.CompactTextString(m) }
func (*SendLocationRequest) ProtoMessage()    {}
func (*SendLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{1}
}

func (m *SendLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendLocationRequest.Unmarshal(m, b)
}
func (m *SendLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendLocationRequest.Marshal(b, m, deterministic)
}
func (m *SendLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendLocationRequest.Merge(m, src)
}
func (m *SendLocationRequest) XXX_Size() int {
	return xxx_messageInfo_SendLocationRequest.Size(m)
}
func (m *SendLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendLocationRequest proto.InternalMessageInfo

func (m *SendLocationRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SendLocationRequest) GetStatusId() Status {
	if m != nil {
		return m.StatusId
	}
	return Status_UNKNOWN
}

func (m *SendLocationRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

// SendLocationsRequest is request to send a collection of location
type SendLocationsRequest struct {
	UserId               string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StatusId             Status      `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3,enum=covitrace.Status" json:"status_id,omitempty"`
	Locations            []*Location `protobuf:"bytes,3,rep,name=locations,proto3" json:"locations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SendLocationsRequest) Reset()         { *m = SendLocationsRequest{} }
func (m *SendLocationsRequest) String() string { return proto.CompactTextString(m) }
func (*SendLocationsRequest) ProtoMessage()    {}
func (*SendLocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{2}
}

func (m *SendLocationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendLocationsRequest.Unmarshal(m, b)
}
func (m *SendLocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendLocationsRequest.Marshal(b, m, deterministic)
}
func (m *SendLocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendLocationsRequest.Merge(m, src)
}
func (m *SendLocationsRequest) XXX_Size() int {
	return xxx_messageInfo_SendLocationsRequest.Size(m)
}
func (m *SendLocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendLocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendLocationsRequest proto.InternalMessageInfo

func (m *SendLocationsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SendLocationsRequest) GetStatusId() Status {
	if m != nil {
		return m.StatusId
	}
	return Status_UNKNOWN
}

func (m *SendLocationsRequest) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

// UpdateUserStatusRequest is request to update user status
type UpdateUserStatusRequest struct {
	PhoneNumber          string   `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=covitrace.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserStatusRequest) Reset()         { *m = UpdateUserStatusRequest{} }
func (m *UpdateUserStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserStatusRequest) ProtoMessage()    {}
func (*UpdateUserStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{3}
}

func (m *UpdateUserStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserStatusRequest.Unmarshal(m, b)
}
func (m *UpdateUserStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserStatusRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserStatusRequest.Merge(m, src)
}
func (m *UpdateUserStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserStatusRequest.Size(m)
}
func (m *UpdateUserStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserStatusRequest proto.InternalMessageInfo

func (m *UpdateUserStatusRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *UpdateUserStatusRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

// AddUserRequest is request to add a user
type AddUserRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserRequest) Reset()         { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()    {}
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{4}
}

func (m *AddUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserRequest.Unmarshal(m, b)
}
func (m *AddUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserRequest.Marshal(b, m, deterministic)
}
func (m *AddUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserRequest.Merge(m, src)
}
func (m *AddUserRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserRequest.Size(m)
}
func (m *AddUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserRequest proto.InternalMessageInfo

func (m *AddUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// User is an app user
type User struct {
	PhoneNumber          string   `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	FullName             string   `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	County               string   `protobuf:"bytes,3,opt,name=county,proto3" json:"county,omitempty"`
	Status               Status   `protobuf:"varint,4,opt,name=status,proto3,enum=covitrace.Status" json:"status,omitempty"`
	DeviceToken          string   `protobuf:"bytes,5,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	Traced               bool     `protobuf:"varint,6,opt,name=traced,proto3" json:"traced,omitempty"`
	UpdatedTimestamp     int64    `protobuf:"varint,7,opt,name=updated_timestamp,json=updatedTimestamp,proto3" json:"updated_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{5}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

func (m *User) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

func (m *User) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

func (m *User) GetTraced() bool {
	if m != nil {
		return m.Traced
	}
	return false
}

func (m *User) GetUpdatedTimestamp() int64 {
	if m != nil {
		return m.UpdatedTimestamp
	}
	return 0
}

// GetUserRequest is request to retrieve a single user
type GetUserRequest struct {
	PhoneNumber          string   `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{6}
}

func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

// ListUsersRequest is request to get collection of users from database
type ListUsersRequest struct {
	PageSize             int32    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            int32    `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	FilterStatus         Status   `protobuf:"varint,3,opt,name=filter_status,json=filterStatus,proto3,enum=covitrace.Status" json:"filter_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{7}
}

func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (m *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(m, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

func (m *ListUsersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListUsersRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *ListUsersRequest) GetFilterStatus() Status {
	if m != nil {
		return m.FilterStatus
	}
	return Status_UNKNOWN
}

// ListUsersResponse is response after fetching users
type ListUsersResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	NextPageToken        int32    `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersResponse) Reset()         { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()    {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{8}
}

func (m *ListUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersResponse.Unmarshal(m, b)
}
func (m *ListUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersResponse.Marshal(b, m, deterministic)
}
func (m *ListUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersResponse.Merge(m, src)
}
func (m *ListUsersResponse) XXX_Size() int {
	return xxx_messageInfo_ListUsersResponse.Size(m)
}
func (m *ListUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersResponse proto.InternalMessageInfo

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListUsersResponse) GetNextPageToken() int32 {
	if m != nil {
		return m.NextPageToken
	}
	return 0
}

func init() {
	proto.RegisterEnum("covitrace.Status", Status_name, Status_value)
	proto.RegisterType((*Location)(nil), "covitrace.Location")
	proto.RegisterType((*SendLocationRequest)(nil), "covitrace.SendLocationRequest")
	proto.RegisterType((*SendLocationsRequest)(nil), "covitrace.SendLocationsRequest")
	proto.RegisterType((*UpdateUserStatusRequest)(nil), "covitrace.UpdateUserStatusRequest")
	proto.RegisterType((*AddUserRequest)(nil), "covitrace.AddUserRequest")
	proto.RegisterType((*User)(nil), "covitrace.User")
	proto.RegisterType((*GetUserRequest)(nil), "covitrace.GetUserRequest")
	proto.RegisterType((*ListUsersRequest)(nil), "covitrace.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "covitrace.ListUsersResponse")
}

func init() { proto.RegisterFile("location.proto", fileDescriptor_4f0f35158dcf9f2c) }

var fileDescriptor_4f0f35158dcf9f2c = []byte{
	// 960 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x41, 0x73, 0xdb, 0x54,
	0x10, 0x46, 0x76, 0x62, 0x5b, 0xeb, 0xd8, 0x75, 0x5e, 0x3b, 0xa9, 0x6b, 0xbb, 0xc5, 0x55, 0x68,
	0x27, 0x14, 0x6a, 0x4d, 0xdd, 0x81, 0x03, 0xb7, 0xd0, 0x9a, 0x8e, 0x87, 0x8e, 0x93, 0x91, 0x9d,
	0x32, 0x03, 0x07, 0xcd, 0xb3, 0xf4, 0x22, 0x34, 0x91, 0x9f, 0x84, 0xf4, 0x14, 0x48, 0x19, 0x38,
	0x70, 0xe0, 0xca, 0x0c, 0x5c, 0xf9, 0x11, 0xfc, 0x17, 0xfe, 0x02, 0x7f, 0x80, 0x7f, 0xc0, 0xbc,
	0x7d, 0x92, 0x2d, 0x27, 0x31, 0xe1, 0xc0, 0xc9, 0xde, 0xfd, 0x76, 0xf7, 0xdb, 0xdd, 0xb7, 0xbb,
	0x82, 0x66, 0x10, 0x3a, 0x54, 0xf8, 0x21, 0x1f, 0x44, 0x71, 0x28, 0x42, 0xa2, 0x3b, 0xe1, 0xb9,
	0x2f, 0x62, 0xea, 0xb0, 0x4e, 0xd7, 0x0b, 0x43, 0x2f, 0x60, 0x26, 0x02, 0xf3, 0xf4, 0xd4, 0x64,
	0x8b, 0x48, 0x5c, 0x28, 0xbb, 0xce, 0x7e, 0x06, 0x06, 0x21, 0xf7, 0xe2, 0x94, 0x73, 0x9f, 0x7b,
	0x66, 0x18, 0xb1, 0x18, 0x63, 0x25, 0x99, 0x51, 0x2f, 0x33, 0xa2, 0x91, 0x6f, 0x52, 0xce, 0x43,
	0xb1, 0x86, 0x7e, 0x88, 0x3f, 0xce, 0x53, 0x8f, 0xf1, 0xa7, 0xc9, 0xb7, 0xd4, 0xf3, 0x58, 0x6c,
	0x86, 0x11, 0x5a, 0x5c, 0xb5, 0x36, 0xfe, 0x28, 0x41, 0xed, 0x75, 0x96, 0x2b, 0xe9, 0x81, 0x2e,
	0x89, 0x7d, 0x91, 0xba, 0xac, 0xad, 0xf5, 0xb5, 0x83, 0x92, 0xb5, 0x52, 0x90, 0x0e, 0xd4, 0x02,
	0x2a, 0x14, 0x58, 0x42, 0x70, 0x29, 0x4b, 0x4f, 0xe1, 0x2f, 0x58, 0x22, 0xe8, 0x22, 0x6a, 0x97,
	0xfb, 0xda, 0x41, 0xd9, 0x5a, 0x29, 0xa4, 0x27, 0x75, 0x9c, 0x34, 0xa6, 0xce, 0x45, 0x7b, 0x4b,
	0x79, 0xe6, 0x32, 0x62, 0x41, 0x16, 0x75, 0x3b, 0xc3, 0x32, 0x99, 0xdc, 0x81, 0xed, 0x24, 0x62,
	0xcc, 0x6d, 0x57, 0x10, 0x50, 0x02, 0x79, 0x04, 0x4d, 0xfc, 0x63, 0x2f, 0x63, 0x56, 0x11, 0x6e,
	0xa0, 0xf6, 0x30, 0x0f, 0xdc, 0x03, 0x3d, 0x0a, 0xa8, 0xc3, 0x16, 0x34, 0x3e, 0x6b, 0xd7, 0xfa,
	0xda, 0x81, 0x6e, 0xad, 0x14, 0xa4, 0x0f, 0x3b, 0x1e, 0x0b, 0xed, 0x53, 0xc6, 0x1d, 0x66, 0xfb,
	0x6e, 0x5b, 0x47, 0x03, 0xf0, 0x58, 0xf8, 0x99, 0x54, 0x8d, 0x5d, 0x72, 0x17, 0xaa, 0xb2, 0x02,
	0x09, 0xd6, 0x11, 0xac, 0x48, 0x71, 0xec, 0x1a, 0xbf, 0x68, 0x70, 0x7b, 0xca, 0xb8, 0x9b, 0xb7,
	0xcd, 0x62, 0xdf, 0xa4, 0x2c, 0x11, 0xd2, 0x21, 0x4d, 0x58, 0x2c, 0x1d, 0x34, 0xe5, 0x20, 0xc5,
	0xb1, 0x4b, 0x06, 0xa0, 0x27, 0x82, 0x8a, 0x34, 0x91, 0x90, 0xec, 0x5c, 0x73, 0xb8, 0x3b, 0x58,
	0x0e, 0xc4, 0x60, 0x8a, 0x98, 0x55, 0x53, 0x36, 0x63, 0x97, 0x98, 0x50, 0xcb, 0xc7, 0x07, 0x7b,
	0x59, 0x1f, 0xde, 0x2e, 0x98, 0x2f, 0x69, 0x97, 0x46, 0xc6, 0xaf, 0x1a, 0xdc, 0x29, 0x66, 0x94,
	0xfc, 0xef, 0x29, 0x3d, 0x93, 0x93, 0x91, 0x05, 0x6f, 0x97, 0xfb, 0xe5, 0x4d, 0x39, 0xad, 0xac,
	0x0c, 0x0f, 0xee, 0x9e, 0x44, 0x2e, 0x15, 0xec, 0x24, 0x61, 0x71, 0x16, 0x30, 0x4b, 0xeb, 0x21,
	0xec, 0x44, 0x5f, 0x87, 0x9c, 0xd9, 0x3c, 0x5d, 0xcc, 0x59, 0x9c, 0xe5, 0x56, 0x47, 0xdd, 0x04,
	0x55, 0xe4, 0x7d, 0xa8, 0x28, 0xf2, 0xcd, 0xd9, 0x65, 0x06, 0xc6, 0x47, 0xd0, 0x3c, 0x74, 0x5d,
	0xc9, 0x92, 0xc7, 0xdf, 0x87, 0x2d, 0x59, 0x27, 0xc6, 0xad, 0x0f, 0x6f, 0x15, 0x5c, 0xd1, 0x0a,
	0x41, 0xe3, 0x6f, 0x0d, 0xb6, 0xa4, 0xf8, 0x5f, 0xb2, 0xe9, 0x82, 0x7e, 0x9a, 0x06, 0x81, 0xcd,
	0xe9, 0x42, 0xcd, 0xbe, 0x6e, 0xd5, 0xa4, 0x62, 0x42, 0x17, 0x8c, 0xec, 0x41, 0xc5, 0x09, 0x53,
	0x2e, 0x2e, 0xf0, 0xb1, 0x74, 0x2b, 0x93, 0x0a, 0x25, 0x6c, 0xdd, 0x50, 0x82, 0x4c, 0xc1, 0x65,
	0xe7, 0xbe, 0xc3, 0x6c, 0x11, 0x9e, 0x31, 0x8e, 0x8b, 0xa0, 0x5b, 0x75, 0xa5, 0x9b, 0x49, 0x95,
	0x64, 0x41, 0x57, 0xb5, 0x0c, 0x35, 0x2b, 0x93, 0xc8, 0x07, 0xb0, 0x9b, 0x62, 0x9b, 0x5d, 0x7b,
	0xb5, 0x81, 0x55, 0xdc, 0xc0, 0x56, 0x06, 0xcc, 0x72, 0xbd, 0xf1, 0x1c, 0x9a, 0xaf, 0x98, 0x28,
	0xb6, 0xea, 0xe6, 0xe2, 0x8d, 0x9f, 0x35, 0x68, 0xbd, 0xf6, 0x13, 0x74, 0x5b, 0x3e, 0x61, 0x17,
	0xf4, 0x88, 0x7a, 0xcc, 0x4e, 0xfc, 0xb7, 0xea, 0x54, 0x6c, 0x5b, 0x35, 0xa9, 0x98, 0xfa, 0x6f,
	0x19, 0xb9, 0x0f, 0x80, 0xa0, 0x2a, 0xa6, 0x84, 0x28, 0x9a, 0xab, 0x52, 0x3e, 0x86, 0xc6, 0xa9,
	0x1f, 0x08, 0x16, 0xdb, 0x59, 0x7f, 0xca, 0x9b, 0xfa, 0xb3, 0xa3, 0xec, 0x94, 0x64, 0xcc, 0x61,
	0xb7, 0x90, 0x47, 0x12, 0x85, 0x3c, 0x61, 0xe4, 0x11, 0x6c, 0xcb, 0xe7, 0x4c, 0xda, 0x1a, 0x4e,
	0xe5, 0x95, 0xc7, 0x56, 0x28, 0x79, 0x0c, 0xb7, 0x38, 0xfb, 0x4e, 0xd8, 0x57, 0xf2, 0x6a, 0x48,
	0xf5, 0x71, 0x9e, 0xdb, 0x93, 0x23, 0xa8, 0x28, 0x36, 0x52, 0x87, 0xea, 0xc9, 0xe4, 0xf3, 0xc9,
	0xd1, 0x17, 0x93, 0xd6, 0x3b, 0x64, 0x07, 0x6a, 0xc7, 0x47, 0xd3, 0xf1, 0x6c, 0xfc, 0x66, 0xd4,
	0xd2, 0xa4, 0x34, 0x19, 0xbd, 0x3a, 0x44, 0xa9, 0x44, 0x1a, 0xa0, 0x4f, 0x4f, 0xa6, 0xc7, 0xa3,
	0x17, 0xb3, 0xd1, 0xcb, 0x56, 0x59, 0x8a, 0xd6, 0xe8, 0xc5, 0xd1, 0x9b, 0x91, 0x35, 0x7a, 0xd9,
	0xda, 0x1a, 0xfe, 0xbe, 0x0d, 0x24, 0x5f, 0x8f, 0x59, 0x4c, 0x1d, 0x9f, 0x7b, 0x87, 0xc7, 0x63,
	0xe2, 0xc3, 0x4e, 0x71, 0x63, 0xc9, 0x83, 0x62, 0xf1, 0x57, 0x8f, 0x4b, 0x67, 0x6f, 0xa0, 0x8e,
	0xfe, 0x20, 0xff, 0x6c, 0x0c, 0x46, 0xf2, 0xb3, 0x61, 0x3c, 0xfc, 0xe9, 0xcf, 0xbf, 0x7e, 0x2b,
	0x75, 0x8d, 0x3d, 0xfc, 0x1a, 0x9c, 0x3f, 0x33, 0x97, 0x0b, 0x68, 0x26, 0x8c, 0xbb, 0x9f, 0x68,
	0x4f, 0x48, 0x04, 0x8d, 0xb5, 0xe3, 0x40, 0xde, 0xdd, 0xc0, 0x95, 0xdc, 0x44, 0xf6, 0x18, 0xc9,
	0xfa, 0x46, 0xf7, 0x7a, 0x32, 0x73, 0x9e, 0x06, 0x67, 0x92, 0xf1, 0x47, 0x68, 0x5d, 0x5e, 0x7d,
	0x62, 0x14, 0x1f, 0xe6, 0xfa, 0xbb, 0xb0, 0x91, 0x77, 0x80, 0xbc, 0x07, 0xc3, 0xfd, 0x9c, 0x17,
	0xdf, 0xd4, 0xfc, 0xbe, 0x38, 0xb9, 0x3f, 0x98, 0x6a, 0x98, 0x24, 0x3f, 0x85, 0x6a, 0x76, 0x11,
	0xc8, 0xbd, 0x02, 0xed, 0xfa, 0x95, 0xd8, 0xc8, 0xb6, 0x8f, 0x6c, 0xf7, 0x8d, 0xf6, 0x3a, 0x1b,
	0x75, 0x64, 0xa5, 0x26, 0x75, 0xb1, 0xa9, 0x5f, 0x41, 0x35, 0xdb, 0xa4, 0x35, 0x8a, 0xf5, 0xed,
	0xea, 0x5c, 0x9e, 0x46, 0xe3, 0x3d, 0x8c, 0xfd, 0x80, 0xf4, 0xfe, 0xad, 0x12, 0xe2, 0x83, 0xbe,
	0x1c, 0x74, 0xd2, 0x2d, 0xde, 0xd9, 0x4b, 0x6b, 0xd8, 0xe9, 0x5d, 0x0f, 0xaa, 0xdd, 0xc8, 0x87,
	0x83, 0xdc, 0xbb, 0xb6, 0x92, 0xc0, 0x4f, 0xc4, 0xa7, 0xf0, 0xe5, 0xf2, 0x33, 0x32, 0xaf, 0x60,
	0x23, 0x9e, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0xe9, 0xa9, 0x9d, 0xf6, 0xbd, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LocationTracingAPIClient is the client API for LocationTracingAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LocationTracingAPIClient interface {
	// Send a single location to the server
	SendLocation(ctx context.Context, in *SendLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Sends user locations
	SendLocations(ctx context.Context, in *SendLocationsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Updates user status
	UpdateUserStatus(ctx context.Context, in *UpdateUserStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Add a new user
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Retrieves a single user
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	// Retrieves a collection of users
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
}

type locationTracingAPIClient struct {
	cc *grpc.ClientConn
}

func NewLocationTracingAPIClient(cc *grpc.ClientConn) LocationTracingAPIClient {
	return &locationTracingAPIClient{cc}
}

func (c *locationTracingAPIClient) SendLocation(ctx context.Context, in *SendLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/covitrace.LocationTracingAPI/SendLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTracingAPIClient) SendLocations(ctx context.Context, in *SendLocationsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/covitrace.LocationTracingAPI/SendLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTracingAPIClient) UpdateUserStatus(ctx context.Context, in *UpdateUserStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/covitrace.LocationTracingAPI/UpdateUserStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTracingAPIClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/covitrace.LocationTracingAPI/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTracingAPIClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/covitrace.LocationTracingAPI/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTracingAPIClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, "/covitrace.LocationTracingAPI/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LocationTracingAPIServer is the server API for LocationTracingAPI service.
type LocationTracingAPIServer interface {
	// Send a single location to the server
	SendLocation(context.Context, *SendLocationRequest) (*empty.Empty, error)
	// Sends user locations
	SendLocations(context.Context, *SendLocationsRequest) (*empty.Empty, error)
	// Updates user status
	UpdateUserStatus(context.Context, *UpdateUserStatusRequest) (*empty.Empty, error)
	// Add a new user
	AddUser(context.Context, *AddUserRequest) (*empty.Empty, error)
	// Retrieves a single user
	GetUser(context.Context, *GetUserRequest) (*User, error)
	// Retrieves a collection of users
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
}

func RegisterLocationTracingAPIServer(s *grpc.Server, srv LocationTracingAPIServer) {
	s.RegisterService(&_LocationTracingAPI_serviceDesc, srv)
}

func _LocationTracingAPI_SendLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTracingAPIServer).SendLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.LocationTracingAPI/SendLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTracingAPIServer).SendLocation(ctx, req.(*SendLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracingAPI_SendLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTracingAPIServer).SendLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.LocationTracingAPI/SendLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTracingAPIServer).SendLocations(ctx, req.(*SendLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracingAPI_UpdateUserStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTracingAPIServer).UpdateUserStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.LocationTracingAPI/UpdateUserStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTracingAPIServer).UpdateUserStatus(ctx, req.(*UpdateUserStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracingAPI_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTracingAPIServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.LocationTracingAPI/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTracingAPIServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracingAPI_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTracingAPIServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.LocationTracingAPI/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTracingAPIServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracingAPI_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTracingAPIServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covitrace.LocationTracingAPI/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTracingAPIServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocationTracingAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "covitrace.LocationTracingAPI",
	HandlerType: (*LocationTracingAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendLocation",
			Handler:    _LocationTracingAPI_SendLocation_Handler,
		},
		{
			MethodName: "SendLocations",
			Handler:    _LocationTracingAPI_SendLocations_Handler,
		},
		{
			MethodName: "UpdateUserStatus",
			Handler:    _LocationTracingAPI_UpdateUserStatus_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _LocationTracingAPI_AddUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _LocationTracingAPI_GetUser_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _LocationTracingAPI_ListUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "location.proto",
}
